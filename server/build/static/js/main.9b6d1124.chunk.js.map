{"version":3,"sources":["Components/Contact/Contact.Styled.js","Components/Contact/Contact.js","Components/Message/Message.Styled.js","Components/Message/Message.js","Components/Sign/Sign.Styled.js","Components/App/App.js","Components/Sign/Sign.js","reportWebVitals.js","index.js"],"names":["StyledContact","styled","div","StyledContactHeader","StyledContactHeaderLeft","StyledContactHeaderRight","StyledSearchBar","StyledPerson","StyledContactPersonName","StyledOnlineBar","StyledOnlineContact","Contact","onlineUsers","joinRoom","userId","IconButton","Avatar","map","user","_id","id","onClick","e","username","type","name","placeholder","StyledMessage","StyledMessageHeader","StyledMessageHeaderLeft","StyledMessageHeaderRight","StyledMessageInformation","StyledMessageFooter","StyledMessageFooterInput","StyledMessageSection","StyledPersonalMessage","StyledContactMessage","Message","roomId","messages","sendMessage","message","setMessage","room","author","data","cols","rows","wrap","value","onKeyPress","key","onChange","target","ios","messenger","StyledSign","StyledSignin","StyledSigninForm","form","StyledCheckBox","StyledFooter","footer","StyledSignup","StyledSignupForm","StyledError","StyledAlert","Sign","error","alert","errorMessage","alertMessage","signin","signup","setUsername","setPassword","password","repeatPassword","setRepeatPassword","setError","setAlert","useState","signupLayer","setSignupLayer","handleSignup","onSubmit","TextField","label","autoComplete","variant","Button","color","Checkbox","defaultChecked","App","isOnline","setIsOnline","setUserId","setErrorMessage","setAlertMessage","setOnlineUsers","setRoomId","setMessages","useEffect","io","on","res","preventDefault","datas","emit","ids","status","user_id","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b6d1124.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContact = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  background-color: #2e3031;\n`;\n\nexport const StyledContactHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const StyledContactHeaderLeft = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: .8rem;\n  color: white;\n`;\n\nexport const StyledContactHeaderRight = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  \n    svg {\n      color: white;\n    }\n`;\n\nexport const StyledSearchBar = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  background-color: #4b4c4d;\n  border-radius: 5px;\n  border: 1px solid #656667;\n  position: relative;\n  display: flex;\n  flex-wrap: nowrap;\n\n  input {\n    background-color: #4b4c4d;\n    border: none;\n    width: 90%;\n    padding: .4rem 0;\n    padding-left: 5px;\n    font-size: .9rem;\n\n    :focus {\n      outline: none;\n    }\n  }\n\n  svg {\n    position: absolute;\n    left: 2px;\n    color: #656667;\n  }\n`;\n\nexport const StyledPerson = styled.div`\n\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  margin: 1rem auto 0 auto;\n  width: 100%;\n\n  :hover {\n    background-color: #65666777;\n    cursor: pointer;\n  }\n\n  #contact-person-name {\n    \n  }\n`;\n\nexport const StyledContactPersonName = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 90%;\n  h2 {\n    margin-block-start: 0;\n    margin-block-end: 0;\n    color: white;\n  }\n  p {\n    margin-block-start: 0;\n    margin-block-end: 0;\n    color: #656667;\n    display: flex;\n    flex-wrap: nowrap;\n  }\n\n  div {\n    width: 18px;\n    height: 18px;\n    margin-left: .5rem;\n  }\n`;\n\nexport const StyledOnlineBar = styled.div`\n  width: 100%;\n  height: 7%;\n  box-sizing: content-box;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-items: center;\n  overflow-x: auto;\n\n`;\n\nexport const StyledOnlineContact = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  p {\n    margin-block-end: 0;\n    margin-block-start: -.5rem;\n    color: white;\n  }\n`;","import React from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport {\n  StyledContact,\n  StyledSearchBar,\n  StyledPerson,\n  StyledContactHeader,\n  StyledContactHeaderLeft,\n  StyledContactHeaderRight,\n  StyledContactPersonName,\n  StyledOnlineBar,\n  StyledOnlineContact\n} from './Contact.Styled';\n\n// Import == Material UI Icons\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Avatar, IconButton } from '@material-ui/core';\n\nconst Contact = ({ onlineUsers, joinRoom, userId }) => {\n  return (\n    <StyledContact>\n      <StyledContactHeader>\n        <StyledContactHeaderLeft>\n        <IconButton>\n          <Avatar />\n        </IconButton>\n        <h1>Messenger</h1>\n        </StyledContactHeaderLeft>\n        <StyledContactHeaderRight>\n          <IconButton>\n            <VideoCallIcon />\n          </IconButton>\n          <IconButton>\n            <ChatBubbleOutlineIcon />\n          </IconButton>\n        </StyledContactHeaderRight>\n      </StyledContactHeader>\n      <StyledOnlineBar>\n        {/* {onlineUsers && onlineUsers.map(user => (\n          <StyledOnlineContact id={user._id} onClick={e => joinRoom(e)}>\n          <IconButton>\n          <Avatar />\n          </IconButton>\n          <p>{user.username}</p>\n          </StyledOnlineContact>\n        ))} */}\n        {onlineUsers && onlineUsers.map(user => {\n          return user._id !== userId ? \n          <StyledOnlineContact id={user._id} onClick={e => joinRoom(e)}>\n          <IconButton>\n          <Avatar />\n          </IconButton>\n          <p>{user.username}</p>\n          </StyledOnlineContact>\n          : null\n        })}\n      </StyledOnlineBar>\n      <StyledSearchBar>\n        <IconButton>\n          <SearchIcon />\n        </IconButton>\n          <input type=\"search\" name=\"\" id=\"\" placeholder=\"Rechercher\" />\n      </StyledSearchBar>\n      <StyledPerson>\n          <IconButton>\n            <Avatar />\n          </IconButton>\n          <StyledContactPersonName>\n            <h2>David Chmarzynski</h2>\n            <p>Je suis le dernier message... ⸱ mar. <Avatar /></p>\n          </StyledContactPersonName>\n      </StyledPerson>\n    </StyledContact>\n  );\n};\n\nexport default Contact;","import styled from 'styled-components';\n\nexport const StyledMessage = styled.div`\n  background-color: #1d1e1f;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 70%;\n  height: 100vh;\n`;\n\nexport const StyledMessageHeader = styled.div`\n  width: 100%;\n  height: 6.5%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n\n  h2 {\n    color: white;\n    margin-block-start: 0;\n    margin-block-end: 0;\n  }\n\n  p {\n    color: #656667;\n    margin-block-start: 0;\n    margin-block-end: 0;\n  }\n\n`;\n\nexport const StyledMessageHeaderLeft = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  width: 50%;\n`;\n\nexport const StyledMessageHeaderRight = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  height: 100%;\n  width: 50%;\n\n  svg {\n    color: #0199ff;\n  }\n`;\n\nexport const StyledMessageInformation = styled.div`\n  display:flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\n\nexport const StyledMessageFooter = styled.div`\n  width: 100%;\n  height: 6.5%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: .2rem;\n\n  svg {\n    color: #0199ff;\n    font-size: 32px;\n  }\n\n  button:nth-child(1) {\n    svg {\n      background-color: #0199ff;\n      border-radius: 50%;\n      color: #1d1e1f;\n    }\n  }\n`;\n\nexport const StyledMessageFooterInput = styled.div`\n  width: 80%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: nowrap;\n  position: relative;\n  border-radius: 30px;\n  background-color: #2e3031;\n  \n  textarea {\n    width: 90%;\n    border: none;\n    color: #656667;\n    font-size: 1.2rem;\n    overflow: auto;\n    background-color: #2e3031;\n    padding: .8rem 0;\n    font-family: \"ubuntu\";\n    resize: none;\n    padding-right: 1rem;\n    ::-webkit-scrollbar {\n      display: none;\n    }\n\n    :focus {\n      outline: none;\n    }\n\n    ::placeholder {\n      color: #656667;\n      font-size: 1.2rem;\n    }\n  }\n\n  svg {\n    position: absolute;\n    background-color: #2e3031;\n    color: #0199ff;\n  }\n`;\n\nexport const StyledMessageSection = styled.div`\n  height: 87%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nexport const StyledPersonalMessage = styled.div`\n  width: 100%;\n  max-height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    max-width: 45%;\n    margin: 1rem 3rem 1rem auto;\n    background-color: #0199ff;\n    padding: .8rem 1rem;\n    border-radius: 15px;\n    -webkit-hyphens: auto;\n    -moz-hyphens: auto;\n    -ms-hyphens: auto;\n    hyphens: auto;\n    color: white;\n  }\n\n  span {\n    width: 100%;\n    color: white;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n  }\n`;\n\nexport const StyledContactMessage = styled.div`\n  width: 100%;\n  max-height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    max-width: 45%;\n    -webkit-hyphens: auto;\n    -moz-hyphens: auto;\n    -ms-hyphens: auto;\n    hyphens: auto;\n    color: white;\n    background-color: #3f4041;\n    padding: .8rem 1rem;\n    border-radius: 15px;\n    margin: 1em auto 1em 3em;\n  }\n\n  span {\n    width: 100%;\n    color: white;\n    display: flex;\n    justify-content: center;\n  }\n`;","import React from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport {\n  StyledMessage,\n  StyledMessageHeader,\n  StyledMessageFooter,\n  StyledPersonalMessage,\n  StyledMessageSection,\n  StyledContactMessage,\n  StyledMessageHeaderLeft,\n  StyledMessageInformation,\n  StyledMessageHeaderRight,\n  StyledMessageFooterInput\n} from './Message.Styled';\n\n// IMPORT MUI COMPONENTS\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Avatar, IconButton } from '@material-ui/core';\n\nconst Message = ({ roomId, messages, userId, sendMessage, message, setMessage }) => {\n  return (\n      <StyledMessage>\n        <StyledMessageHeader>\n        <StyledMessageHeaderLeft>\n          <IconButton>\n            <Avatar />\n          </IconButton>\n          <StyledMessageInformation>\n            <h2>David Chmarzynski</h2>\n            <p>Actuellement en ligne</p>\n          </StyledMessageInformation>\n        </StyledMessageHeaderLeft>\n        <StyledMessageHeaderRight>\n          <IconButton>\n            <PhoneIcon />\n          </IconButton>\n          <IconButton>\n            <VideocamIcon />\n          </IconButton>\n          <IconButton>\n            <SearchIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </StyledMessageHeaderRight>\n        </StyledMessageHeader>\n        <StyledMessageSection>\n          {messages.map(message => {\n            return message.room === roomId && message.author === userId ? <StyledPersonalMessage><p>{message.data}</p></StyledPersonalMessage> :\n            message.room === roomId && message.author !== userId ? <StyledContactMessage><p>{message.data}</p></StyledContactMessage> : null\n          })}\n        </StyledMessageSection>\n        <StyledMessageFooter>\n          <IconButton>\n            <AddIcon />\n          </IconButton>\n          <StyledMessageFooterInput>\n            <textarea\n            name=\"\"\n            id=\"\"\n            cols=\"20\"\n            rows=\"1\"\n            wrap=\"hard\"\n            placeholder=\"Ecrivez votre message...\"\n            value={message}\n            onKeyPress={e => e.key === \"Enter\" ? sendMessage(e) : null}\n            onChange={e => setMessage(e.target.value)}\n            >\n            </textarea>\n            <IconButton>\n              <EmojiEmotionsIcon />\n            </IconButton>\n          </StyledMessageFooterInput>\n          <IconButton onClick={e => sendMessage(e)}>\n            <SendIcon />\n          </IconButton>\n        </StyledMessageFooter>\n      </StyledMessage>\n  );\n};\n\nexport default Message;","import styled from 'styled-components';\n\nexport const StyledSign = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #FFFFFF;\n  display: flex;\n  flex-wrap: nowrap;\n`;\n\nexport const StyledSignin = styled.div`\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  text-align: center;\n  flex-wrap: wrap;\n  color: black;\n\n  h1 {\n    width: 100%;\n  }\n`;\n\nexport const StyledSigninForm = styled.form`\n  width: 100%;\n  height: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  div {\n    margin-bottom: .7rem;\n  }\n\n  button {\n    font-weight: 800;\n    margin-top: .5rem;\n  }\n`;\n\nexport const StyledCheckBox = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const StyledFooter = styled.footer`\n  height: 10%;\n  width: 60%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: auto;\n  \n  p {\n    :hover {\n      cursor: pointer;\n      text-decoration: underline;\n    }\n  }\n`;\n\nexport const StyledSignup = styled.div`\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  text-align: center;\n  flex-wrap: wrap;\n  color: black;\n\n  h1 {\n    width: 100%;\n  }\n`;\n\nexport const StyledSignupForm = styled.form`\n  width: 100%;\n  height: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  div {\n    margin-bottom: .7rem;\n  }\n\n  button {\n    font-weight: 800;\n    margin-top: .5rem;\n  }\n`;\n\nexport const StyledError = styled.div`\n  color: red;\n`;\n\nexport const StyledAlert = styled.div`\n  color: green;\n`;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// IMPORT COMPONENTS\nimport Contact from '../Contact/Contact';\nimport Message from '../Message/Message';\nimport Sign from '../Sign/Sign';\n\n// SOCKETS\nlet ios;\nlet messenger;\n\nconst App = () => {\n  // STATES\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const [isOnline, setIsOnline] = useState(false);\n  const [userId, setUserId] = useState('');\n  const [error, setError] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('Erreur');\n  const [alertMessage, setAlertMessage] = useState('');\n  const [onlineUsers, setOnlineUsers] = useState();\n  const [roomId, setRoomId] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n\n  // INIT SOCKET.IO\n  useEffect(() => {\n    ios = io();\n  }, []);\n\n  // CONNECT CHATROOM NAMESPACE\n  useEffect(() => {\n    if(isOnline) {\n      messenger = io('/messenger');\n\n      messenger.on('connect', () => {\n\n        messenger.on('getUsers', (res) => {\n          setOnlineUsers(res);\n        });\n\n        messenger.on('getMessages', (res) => {\n          setMessages(res);\n        });\n      });\n    }\n  }, [isOnline]);\n\n  const signin = (e) => {\n    e.preventDefault();\n    const ids = {username, password};\n    ios.emit('signin', ids, (res) => {\n      if(res.status === 200) {\n        setIsOnline(true);\n        setUserId(res.user_id);\n        setAlert(true);\n        setAlertMessage(res.message);\n      } else {\n        setError(true);\n        setErrorMessage(res.message);\n      }\n    });\n  };\n\n  const signup = (e) => {\n    e.preventDefault();\n    if(password === repeatPassword) {\n      const ids = {username, password};\n      ios.emit('signup', ids, (res) => {\n        if(res.status === 200) {\n          setAlert(true);\n          setAlertMessage(res.message);\n        } else {\n          setError(true);\n          setErrorMessage(res.message);\n        }\n      });\n    } else {\n      setError(true);\n      setErrorMessage('Les mots de passe ne correspondent pas');\n    }\n  };\n\n  const joinRoom = (e) => {\n    e.preventDefault();\n    const id = e.currentTarget.id;\n    const ids = {userId, id};\n    messenger.emit('joinRoom', ids, (res) => {\n      setRoomId([res.roomId]);\n      setMessages(res.messages);\n    });\n  };\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    const datas = {message, userId, roomId};\n    messenger.emit('sendMessage', datas, (res) => {\n      setMessage('');\n    });\n  };\n  return (\n    <Router>\n    <div id=\"App\">\n      {!isOnline && (\n        <Sign\n          signin={signin}\n          signup={signup}\n          setUsername={setUsername}\n          username={username}\n          setPassword={setPassword}\n          password={password}\n          setRepeatPassword={setRepeatPassword}\n          repeatPassword={repeatPassword}\n          error={error}\n          setError={setError}\n          errorMessage={errorMessage}\n          alert={alert}\n          setAlert={setAlert}\n          alertMessage={alertMessage}\n        />\n      )}\n      {isOnline && (\n        <>\n        <Contact onlineUsers={onlineUsers} joinRoom={joinRoom} userId={userId} />\n        {roomId && (\n          roomId.map(room => (\n            <Message\n              roomId={room}\n              messages={messages}\n              userId={userId}\n              sendMessage={sendMessage}\n              message={message}\n              setMessage={setMessage}\n            />\n          ))\n        )}\n        </>\n      )}\n\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledSign, StyledSignin, StyledSigninForm, StyledSignup, StyledCheckBox, StyledFooter, StyledSignupForm, StyledError, StyledAlert } from './Sign.Styled';\n\n// IMPORT MUI COMPONENTS\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst Sign = ({\n  error,\n  alert,\n  errorMessage,\n  alertMessage,\n  signin,\n  signup,\n  setUsername,\n  setPassword,\n  username,\n  password,\n  repeatPassword,\n  setRepeatPassword,\n  setError,\n  setAlert\n}) => {\n  const [signupLayer, setSignupLayer] = useState(false);\n\n  const handleSignup = () => {\n    setSignupLayer(!signupLayer);\n    setError(false);\n    setAlert(false);\n  };\n  \n  return (\n    <StyledSign>\n      {!signupLayer && (\n      <StyledSignin>\n        <StyledSigninForm onSubmit={e => signin(e)}>\n        <h1>Connectez vous à Messenger</h1>\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Nom d'utilisateur\"\n          type=\"text\"\n          autoComplete=\"username\"\n          value={username}\n          variant=\"outlined\"\n          onChange={e => setUsername(e.target.value)}\n        />\n          <TextField\n          id=\"outlined-password-input\"\n          label=\"Mot de passe\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">Continuer</Button>\n          <StyledCheckBox>\n          <Checkbox\n            defaultChecked\n            color=\"primary\"\n            label=\"Rester connecté(e)\"\n          />\n          <p>Rester connecté(e)</p>\n          </StyledCheckBox>\n          {error && (\n            <StyledError>\n              <p>{errorMessage}</p>\n            </StyledError>\n          )}\n          {alert && (\n            <StyledAlert>\n              <p>{alertMessage}</p>\n            </StyledAlert>\n          )}\n        </StyledSigninForm>\n        <StyledFooter>\n          <p onClick={handleSignup}>Pas encore inscrit ?</p>\n          <p>Mot de passe oublié ?</p>\n          <p>Politique d'utilisation des données</p>\n          <p>Conditions</p>\n          <p>Politique d'utilisation des cookies</p>\n          <p>© Messenger - 2021</p>\n        </StyledFooter>\n      </StyledSignin>\n      )}\n      {signupLayer && (\n        <StyledSignup>\n        <StyledSignupForm onSubmit={e => signup(e)}>\n          <h1>Inscrivez vous à Messenger</h1>\n            <TextField\n              id=\"outlined-password-input\"\n              label=\"Nom d'utilisateur\"\n              type=\"text\"\n              autoComplete=\"username\"\n              variant=\"outlined\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n            />\n            <TextField\n            id=\"outlined-password-input\"\n            label=\"Mot de passe\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"outlined\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"Confirmez le mot de passe\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"outlined\"\n            value={repeatPassword}\n            onChange={e => setRepeatPassword(e.target.value)}\n          />\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">S'inscrire</Button>\n          {error && (\n            <StyledError>\n              <p>{errorMessage}</p>\n            </StyledError>\n          )}\n          {alert && (\n            <StyledAlert>\n              <p>{alertMessage}</p>\n            </StyledAlert>\n          )}\n        </StyledSignupForm>\n        <StyledFooter>\n          <p onClick={handleSignup}>Se connecter</p>\n          <p>Politique d'utilisation des données</p>\n          <p>Conditions</p>\n          <p>Politique d'utilisation des cookies</p>\n          <p>© Messenger - 2021</p>\n        </StyledFooter>\n        </StyledSignup>\n        \n      )}\n    </StyledSign>\n  );\n};\n\nexport default Sign;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}