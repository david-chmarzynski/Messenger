{"version":3,"sources":["Components/Contact/Contact.Styled.js","Components/Contact/Contact.js","Components/Message/Message.Styled.js","Components/Message/Message.js","Components/Sign/Sign.Styled.js","Components/App/App.js","Components/Sign/Sign.js","Components/Home/Home.js","reportWebVitals.js","index.js"],"names":["StyledContact","styled","div","StyledContactHeader","StyledContactHeaderLeft","StyledContactHeaderRight","StyledSearchBar","StyledPerson","StyledContactPersonName","StyledOnlineBar","StyledOnlineContact","Contact","onlineUsers","joinRoom","userId","contacts","IconButton","Avatar","map","user","_id","id","onClick","e","username","type","name","placeholder","contact","StyledMessage","StyledMessageHeader","StyledMessageHeaderLeft","StyledMessageHeaderRight","StyledMessageInformation","StyledMessageFooter","StyledMessageFooterInput","StyledMessageSection","StyledPersonalMessage","StyledContactMessage","StyledMessengerMessage","Message","roomId","messages","sendMessage","message","setMessage","isContactOnline","ref","useRef","useEffect","current","scrollTo","behavior","top","document","getElementById","scrollHeight","room","author","ReactEmoji","emojify","data","cols","rows","wrap","value","onKeyPress","key","onChange","target","ios","messenger","StyledSign","StyledSignin","StyledSigninForm","form","StyledCheckBox","StyledFooter","footer","StyledSignup","StyledSignupForm","StyledError","StyledAlert","Sign","error","alert","errorMessage","alertMessage","signin","signup","setUsername","setPassword","password","repeatPassword","setRepeatPassword","setError","setAlert","useState","signupLayer","setSignupLayer","handleSignup","onSubmit","TextField","label","autoComplete","variant","Button","color","Checkbox","defaultChecked","Home","App","isOnline","setIsOnline","setUserId","setErrorMessage","setAlertMessage","setOnlineUsers","setRoomId","setRooms","setMessages","setContacts","setContact","setIsContactOnline","io","on","res","rooms","users","preventDefault","datas","emit","ids","status","user_id","currentTarget","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bfc9a29d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContact = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  background-color: #2e3031;\n`;\n\nexport const StyledContactHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const StyledContactHeaderLeft = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: .8rem;\n  color: white;\n`;\n\nexport const StyledContactHeaderRight = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  \n    svg {\n      color: white;\n    }\n`;\n\nexport const StyledSearchBar = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  background-color: #4b4c4d;\n  border-radius: 5px;\n  border: 1px solid #656667;\n  position: relative;\n  display: flex;\n  flex-wrap: nowrap;\n\n  input {\n    background-color: #4b4c4d;\n    border: none;\n    width: 90%;\n    padding: .4rem 0;\n    padding-left: 5px;\n    font-size: .9rem;\n\n    :focus {\n      outline: none;\n    }\n  }\n\n  svg {\n    position: absolute;\n    left: 2px;\n    color: #656667;\n  }\n`;\n\nexport const StyledPerson = styled.div`\n\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  margin: 1rem auto 0 auto;\n  width: 100%;\n\n  :hover {\n    background-color: #65666777;\n    cursor: pointer;\n  }\n\n  #contact-person-name {\n    \n  }\n`;\n\nexport const StyledContactPersonName = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 90%;\n  h2 {\n    margin-block-start: 0;\n    margin-block-end: 0;\n    color: white;\n  }\n  p {\n    margin-block-start: 0;\n    margin-block-end: 0;\n    color: #656667;\n    display: flex;\n    flex-wrap: nowrap;\n  }\n\n  div {\n    width: 18px;\n    height: 18px;\n    margin-left: .5rem;\n  }\n`;\n\nexport const StyledOnlineBar = styled.div`\n  width: 100%;\n  height: 7%;\n  box-sizing: content-box;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-items: center;\n  overflow-x: auto;\n\n`;\n\nexport const StyledOnlineContact = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  p {\n    margin-block-end: 0;\n    margin-block-start: -.5rem;\n    color: white;\n  }\n`;","import React from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport {\n  StyledContact,\n  StyledSearchBar,\n  StyledPerson,\n  StyledContactHeader,\n  StyledContactHeaderLeft,\n  StyledContactHeaderRight,\n  StyledContactPersonName,\n  StyledOnlineBar,\n  StyledOnlineContact\n} from './Contact.Styled';\n\n// Import == Material UI Icons\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Avatar, IconButton } from '@material-ui/core';\n\nconst Contact = ({ onlineUsers, joinRoom, userId, contacts }) => {\n  return (\n    <StyledContact>\n      <StyledContactHeader>\n        <StyledContactHeaderLeft>\n        <IconButton>\n          <Avatar />\n        </IconButton>\n        <h1>Messenger</h1>\n        </StyledContactHeaderLeft>\n        <StyledContactHeaderRight>\n          <IconButton>\n            <VideoCallIcon />\n          </IconButton>\n          <IconButton>\n            <ChatBubbleOutlineIcon />\n          </IconButton>\n        </StyledContactHeaderRight>\n      </StyledContactHeader>\n      <StyledOnlineBar>\n        {onlineUsers && onlineUsers.map(user => {\n          return user._id !== userId ? \n          <StyledOnlineContact id={user._id} onClick={e => joinRoom(e)}>\n          <IconButton>\n          <Avatar />\n          </IconButton>\n          <p>{user.username}</p>\n          </StyledOnlineContact>\n          : null\n        })}\n      </StyledOnlineBar>\n      <StyledSearchBar>\n        <IconButton>\n          <SearchIcon />\n        </IconButton>\n          <input type=\"search\" name=\"\" id=\"\" placeholder=\"Rechercher\" />\n      </StyledSearchBar>\n      {contacts && contacts.map(contact => {\n        return contact &&\n        <StyledPerson id={contact._id} onClick={e => joinRoom(e)}>\n        <IconButton>\n          <Avatar />\n        </IconButton>\n        <StyledContactPersonName>\n          <h2>{contact.username}</h2>\n          </StyledContactPersonName>\n      </StyledPerson>\n      })}\n      {/* <StyledPerson>\n          <IconButton>\n            <Avatar />\n          </IconButton>\n          <StyledContactPersonName> */}\n            {/* {rooms && rooms.map(room => {\n              return room && <h2>{room.title}</h2>\n            })} */}\n            {/* <h2>David Chmarzynski</h2> */}\n            {/* <p>Je suis le dernier message... ⸱ mar. <Avatar /></p> */}\n          {/* </StyledContactPersonName>\n      </StyledPerson>*/}\n    </StyledContact> \n  );\n};\n\nexport default Contact;","import styled from 'styled-components';\n\nexport const StyledMessage = styled.div`\n  background-color: #1d1e1f;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 70%;\n  height: 100vh;\n`;\n\nexport const StyledMessageHeader = styled.div`\n  width: 100%;\n  height: 6.5%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n\n  h2 {\n    color: white;\n    margin-block-start: 0;\n    margin-block-end: 0;\n  }\n\n  p {\n    color: #656667;\n    margin-block-start: 0;\n    margin-block-end: 0;\n  }\n\n`;\n\nexport const StyledMessageHeaderLeft = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  width: 50%;\n`;\n\nexport const StyledMessageHeaderRight = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  height: 100%;\n  width: 50%;\n\n  svg {\n    color: #0199ff;\n  }\n`;\n\nexport const StyledMessageInformation = styled.div`\n  display:flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\n\nexport const StyledMessageFooter = styled.div`\n  width: 100%;\n  height: 6.5%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: .2rem;\n\n  svg {\n    color: #0199ff;\n    font-size: 32px;\n  }\n\n  button:nth-child(1) {\n    svg {\n      background-color: #0199ff;\n      border-radius: 50%;\n      color: #1d1e1f;\n    }\n  }\n`;\n\nexport const StyledMessageFooterInput = styled.div`\n  width: 80%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: nowrap;\n  position: relative;\n  border-radius: 30px;\n  background-color: #2e3031;\n  \n  textarea {\n    width: 90%;\n    border: none;\n    color: #FFFFFF;\n    font-size: 1.2rem;\n    overflow: auto;\n    background-color: #2e3031;\n    padding: .8rem 0;\n    font-family: \"ubuntu\";\n    resize: none;\n    padding-right: 1rem;\n    ::-webkit-scrollbar {\n      display: none;\n    }\n\n    :focus {\n      outline: none;\n    }\n\n    ::placeholder {\n      color: #656667;\n      font-size: 1.2rem;\n    }\n  }\n\n  svg {\n    position: absolute;\n    background-color: #2e3031;\n    color: #0199ff;\n  }\n`;\n\nexport const StyledMessageSection = styled.div`\n  height: 87%;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  ::-webkit-scrollbar { width: 0 !important }\n`;\n\nexport const StyledPersonalMessage = styled.div`\n  width: 100%;\n  max-height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    max-width: 45%;\n    margin: 1rem 3rem 1rem auto;\n    background-color: #0199ff;\n    padding: .5rem .7rem;\n    border-radius: 15px;\n    -webkit-hyphens: auto;\n    -moz-hyphens: auto;\n    -ms-hyphens: auto;\n    hyphens: auto;\n    color: white;\n  }\n\n  span {\n    width: 100%;\n    color: white;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n  }\n`;\n\nexport const StyledContactMessage = styled.div`\n  width: 100%;\n  max-height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    max-width: 45%;\n    -webkit-hyphens: auto;\n    -moz-hyphens: auto;\n    -ms-hyphens: auto;\n    hyphens: auto;\n    color: white;\n    background-color: #3f4041;\n    padding: .5rem .7rem;\n    border-radius: 15px;\n    margin: 1em auto 1em 3em;\n  }\n\n  span {\n    width: 100%;\n    color: white;\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nexport const StyledMessengerMessage = styled.div`\n  width: 100%;\n  max-height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    max-width: 45%;\n    -webkit-hyphens: auto;\n    -moz-hyphens: auto;\n    -ms-hyphens: auto;\n    hyphens: auto;\n    color: white;\n    background-color: #3f4041;\n    padding: .8rem 1rem;\n    border-radius: 15px;\n    margin: auto auto auto auto;\n  }\n\n  span {\n    width: 100%;\n    color: white;\n    display: flex;\n    justify-content: center;\n  }\n`;","import React, { useRef, useEffect } from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport {\n  StyledMessage,\n  StyledMessageHeader,\n  StyledMessageFooter,\n  StyledPersonalMessage,\n  StyledMessageSection,\n  StyledContactMessage,\n  StyledMessageHeaderLeft,\n  StyledMessageInformation,\n  StyledMessageHeaderRight,\n  StyledMessageFooterInput\n} from './Message.Styled';\n\n// IMPORT MUI COMPONENTS\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport ReactEmoji from 'react-emoji';\n\nconst Message = ({ roomId, messages, userId, sendMessage, message, setMessage, contact, isContactOnline }) => {\n  const ref = useRef(null);\n  const scrollToBottom = () => {\n    ref.current.scrollTo({ \n      behavior: \"smooth\",\n      top: document.getElementById('scroller').scrollHeight\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  return (\n      <StyledMessage>\n        <StyledMessageHeader>\n        <StyledMessageHeaderLeft>\n          <IconButton>\n            <Avatar />\n          </IconButton>\n          <StyledMessageInformation>\n            <h2>{contact}</h2>\n            <p>{isContactOnline ? \"Actuellement en ligne\" : \"Actuellement hors ligne\"}</p>\n          </StyledMessageInformation>\n        </StyledMessageHeaderLeft>\n        <StyledMessageHeaderRight>\n          <IconButton>\n            <PhoneIcon />\n          </IconButton>\n          <IconButton>\n            <VideocamIcon />\n          </IconButton>\n          <IconButton>\n            <SearchIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </StyledMessageHeaderRight>\n        </StyledMessageHeader>\n        <StyledMessageSection ref={ref} id=\"scroller\">\n          {messages.map(message => {\n            return message.room === roomId && message.author === userId ? <StyledPersonalMessage><p>{ReactEmoji.emojify(message.data)}</p></StyledPersonalMessage> :\n            message.room === roomId && message.author !== userId ? <StyledContactMessage><p>{ReactEmoji.emojify(message.data)}</p></StyledContactMessage> : null\n          })}\n        </StyledMessageSection>\n        <StyledMessageFooter>\n          <IconButton>\n            <AddIcon />\n          </IconButton>\n          <StyledMessageFooterInput>\n            <textarea\n            name=\"\"\n            id=\"\"\n            cols=\"20\"\n            rows=\"1\"\n            wrap=\"hard\"\n            placeholder=\"Ecrivez un message...\"\n            value={message}\n            onKeyPress={e => e.key === \"Enter\" ? sendMessage(e) : null}\n            onChange={e => setMessage(e.target.value)}\n            >\n            </textarea>\n            <IconButton>\n              <EmojiEmotionsIcon />\n            </IconButton>\n          </StyledMessageFooterInput>\n          <IconButton onClick={e => sendMessage(e)}>\n            <SendIcon />\n          </IconButton>\n        </StyledMessageFooter>\n      </StyledMessage>\n  );\n};\n\nexport default Message;","import styled from 'styled-components';\n\nexport const StyledSign = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #FFFFFF;\n  display: flex;\n  flex-wrap: nowrap;\n`;\n\nexport const StyledSignin = styled.div`\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  text-align: center;\n  flex-wrap: wrap;\n  color: black;\n\n  h1 {\n    width: 100%;\n  }\n`;\n\nexport const StyledSigninForm = styled.form`\n  width: 100%;\n  height: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  div {\n    margin-bottom: .7rem;\n  }\n\n  button {\n    font-weight: 800;\n    margin-top: .5rem;\n  }\n`;\n\nexport const StyledCheckBox = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const StyledFooter = styled.footer`\n  height: 10%;\n  width: 60%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: auto;\n  \n  p {\n    :hover {\n      cursor: pointer;\n      text-decoration: underline;\n    }\n  }\n`;\n\nexport const StyledSignup = styled.div`\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  text-align: center;\n  flex-wrap: wrap;\n  color: black;\n\n  h1 {\n    width: 100%;\n  }\n`;\n\nexport const StyledSignupForm = styled.form`\n  width: 100%;\n  height: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  div {\n    margin-bottom: .7rem;\n  }\n\n  button {\n    font-weight: 800;\n    margin-top: .5rem;\n  }\n`;\n\nexport const StyledError = styled.div`\n  color: red;\n`;\n\nexport const StyledAlert = styled.div`\n  color: green;\n`;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// IMPORT COMPONENTS\nimport Contact from '../Contact/Contact';\nimport Message from '../Message/Message';\nimport Sign from '../Sign/Sign';\nimport Home from '../Home/Home';\n\n// SOCKETS\nlet ios;\nlet messenger;\n\nconst App = () => {\n  // STATES\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const [isOnline, setIsOnline] = useState(false);\n  const [userId, setUserId] = useState('');\n  const [error, setError] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('Erreur');\n  const [alertMessage, setAlertMessage] = useState('');\n  const [onlineUsers, setOnlineUsers] = useState();\n  const [roomId, setRoomId] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [contacts, setContacts] = useState();\n  const [contact, setContact] = useState('');\n  const [isContactOnline, setIsContactOnline] = useState(false);\n\n  // INIT SOCKET.IO\n  useEffect(() => {\n    ios = io();\n  }, []);\n\n  // CONNECT CHATROOM NAMESPACE\n  useEffect(() => {\n    if(isOnline) {\n      messenger = io('/messenger');\n\n      messenger.on('connect', () => {\n\n        messenger.on('getUsers', (res) => {\n          setOnlineUsers(res);\n        });\n\n        messenger.on('getMessages', (res) => {\n          setMessages(res);\n        });\n\n        messenger.on('getRooms', (res) => {\n          setRooms(res.rooms);\n          setContacts(res.users);\n        });\n      });\n    }\n  }, [isOnline]);\n\n  // useEffect((onlineUsers) => {\n  //   onlineUsers.map(user => {\n  //     if(user._id === contact._id) {\n  //       setIsContactOnline(true);\n  //     } else {\n\n  //     }\n  //   })\n  // }, [onlineUsers]);\n\n  const signin = (e) => {\n    e.preventDefault();\n    const ids = {username, password};\n    ios.emit('signin', ids, (res) => {\n      if(res.status === 200) {\n        setIsOnline(true);\n        setUserId(res.user_id);\n        setAlert(true);\n        setAlertMessage(res.message);\n      } else {\n        setError(true);\n        setErrorMessage(res.message);\n      }\n    });\n  };\n\n  const signup = (e) => {\n    e.preventDefault();\n    if(password === repeatPassword) {\n      const ids = {username, password};\n      ios.emit('signup', ids, (res) => {\n        if(res.status === 200) {\n          setAlert(true);\n          setAlertMessage(res.message);\n        } else {\n          setError(true);\n          setErrorMessage(res.message);\n        }\n      });\n    } else {\n      setError(true);\n      setErrorMessage('Les mots de passe ne correspondent pas');\n    }\n  };\n\n  const joinRoom = (e) => {\n    e.preventDefault();\n    const id = e.currentTarget.id;\n    const ids = {userId, id};\n    messenger.emit('joinRoom', ids, (res) => {\n      setRoomId([res.roomId]);\n      setMessages(res.messages);\n      setContact(res.contact);\n      setIsContactOnline(res.isOnline);\n    });\n  };\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    const datas = {message, userId, roomId};\n    messenger.emit('sendMessage', datas, (res) => {\n      setMessage('');\n    });\n  };\n\n\n  return (\n    <Router>\n    <div id=\"App\">\n      {!isOnline && (\n        <Sign\n          signin={signin}\n          signup={signup}\n          setUsername={setUsername}\n          username={username}\n          setPassword={setPassword}\n          password={password}\n          setRepeatPassword={setRepeatPassword}\n          repeatPassword={repeatPassword}\n          error={error}\n          setError={setError}\n          errorMessage={errorMessage}\n          alert={alert}\n          setAlert={setAlert}\n          alertMessage={alertMessage}\n        />\n      )}\n      {isOnline && (\n        <>\n        <Contact onlineUsers={onlineUsers} joinRoom={joinRoom} userId={userId} contacts={contacts} />\n        {roomId.length > 0 ? (\n          roomId.map(room => (\n            <Message\n              roomId={room}\n              messages={messages}\n              userId={userId}\n              sendMessage={sendMessage}\n              message={message}\n              setMessage={setMessage}\n              contact={contact}\n              isContactOnline={isContactOnline}\n            />\n          ))\n        ) : (\n          <Home />\n        )}\n        </>\n      )}\n\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledSign, StyledSignin, StyledSigninForm, StyledSignup, StyledCheckBox, StyledFooter, StyledSignupForm, StyledError, StyledAlert } from './Sign.Styled';\n\n// IMPORT MUI COMPONENTS\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst Sign = ({\n  error,\n  alert,\n  errorMessage,\n  alertMessage,\n  signin,\n  signup,\n  setUsername,\n  setPassword,\n  username,\n  password,\n  repeatPassword,\n  setRepeatPassword,\n  setError,\n  setAlert\n}) => {\n  const [signupLayer, setSignupLayer] = useState(false);\n\n  const handleSignup = () => {\n    setSignupLayer(!signupLayer);\n    setError(false);\n    setAlert(false);\n  };\n  \n  return (\n    <StyledSign>\n      {!signupLayer && (\n      <StyledSignin>\n        <StyledSigninForm onSubmit={e => signin(e)}>\n        <h1>Connectez vous à Messenger</h1>\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Nom d'utilisateur\"\n          type=\"text\"\n          autoComplete=\"username\"\n          value={username}\n          variant=\"outlined\"\n          onChange={e => setUsername(e.target.value)}\n        />\n          <TextField\n          id=\"outlined-password-input\"\n          label=\"Mot de passe\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">Continuer</Button>\n          <StyledCheckBox>\n          <Checkbox\n            defaultChecked\n            color=\"primary\"\n            label=\"Rester connecté(e)\"\n          />\n          <p>Rester connecté(e)</p>\n          </StyledCheckBox>\n          {error && (\n            <StyledError>\n              <p>{errorMessage}</p>\n            </StyledError>\n          )}\n          {alert && (\n            <StyledAlert>\n              <p>{alertMessage}</p>\n            </StyledAlert>\n          )}\n        </StyledSigninForm>\n        <StyledFooter>\n          <p onClick={handleSignup}>Pas encore inscrit ?</p>\n          <p>Mot de passe oublié ?</p>\n          <p>Politique d'utilisation des données</p>\n          <p>Conditions</p>\n          <p>Politique d'utilisation des cookies</p>\n          <p>© Messenger - 2021</p>\n        </StyledFooter>\n      </StyledSignin>\n      )}\n      {signupLayer && (\n        <StyledSignup>\n        <StyledSignupForm onSubmit={e => signup(e)}>\n          <h1>Inscrivez vous à Messenger</h1>\n            <TextField\n              id=\"outlined-password-input\"\n              label=\"Nom d'utilisateur\"\n              type=\"text\"\n              autoComplete=\"username\"\n              variant=\"outlined\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n            />\n            <TextField\n            id=\"outlined-password-input\"\n            label=\"Mot de passe\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"outlined\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"Confirmez le mot de passe\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"outlined\"\n            value={repeatPassword}\n            onChange={e => setRepeatPassword(e.target.value)}\n          />\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">S'inscrire</Button>\n          {error && (\n            <StyledError>\n              <p>{errorMessage}</p>\n            </StyledError>\n          )}\n          {alert && (\n            <StyledAlert>\n              <p>{alertMessage}</p>\n            </StyledAlert>\n          )}\n        </StyledSignupForm>\n        <StyledFooter>\n          <p onClick={handleSignup}>Se connecter</p>\n          <p>Politique d'utilisation des données</p>\n          <p>Conditions</p>\n          <p>Politique d'utilisation des cookies</p>\n          <p>© Messenger - 2021</p>\n        </StyledFooter>\n        </StyledSignup>\n        \n      )}\n    </StyledSign>\n  );\n};\n\nexport default Sign;","import React from 'react';\n\n// IMPORT STYLED COMPONENTS (MESSAGE)\nimport { \n  StyledMessage,\n  StyledMessageHeader,\n  StyledMessageSection,\n  StyledContactMessage,\n  StyledMessageHeaderLeft,\n  StyledMessageInformation,\n  StyledMessageHeaderRight,\n  StyledMessengerMessage\n} from '../Message/Message.Styled';\n\n// IMPORT MUI COMPONENTS\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Avatar, IconButton } from '@material-ui/core';\n\nconst Home = () => {\n  return (\n    <StyledMessage>\n        <StyledMessageHeader>\n        <StyledMessageHeaderLeft>\n          <IconButton>\n            <Avatar />\n          </IconButton>\n          <StyledMessageInformation>\n          </StyledMessageInformation>\n        </StyledMessageHeaderLeft>\n        <StyledMessageHeaderRight>\n          <IconButton>\n            <PhoneIcon />\n          </IconButton>\n          <IconButton>\n            <VideocamIcon />\n          </IconButton>\n          <IconButton>\n            <SearchIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </StyledMessageHeaderRight>\n        </StyledMessageHeader>\n        <StyledMessageSection>\n          <StyledMessengerMessage><p>Commencez une discussion avec un contact connecté</p></StyledMessengerMessage>\n        </StyledMessageSection>\n      </StyledMessage>\n  );\n};\n\nexport default Home;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}