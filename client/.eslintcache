[{"/home/david/Dev/Messenger/client/src/Components/Contact/Contact.Styled.js":"1","/home/david/Dev/Messenger/client/src/Components/App/App.js":"2","/home/david/Dev/Messenger/client/src/Components/Message/Message.Styled.js":"3","/home/david/Dev/Messenger/client/src/reportWebVitals.js":"4","/home/david/Dev/Messenger/client/src/Components/Sign/Sign.Styled.js":"5","/home/david/Dev/Messenger/client/src/index.js":"6","/home/david/Dev/Messenger/client/src/Components/Sign/Sign.js":"7","/home/david/Dev/Messenger/client/src/Components/Message/Message.js":"8","/home/david/Dev/Messenger/client/src/Components/Contact/Contact.js":"9","/home/david/Dev/Messenger/client/src/Components/Home/Home.js":"10"},{"size":2178,"mtime":1611041019820,"results":"11","hashOfConfig":"12"},{"size":4585,"mtime":1611217376680,"results":"13","hashOfConfig":"12"},{"size":3731,"mtime":1611219039830,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":1610718148770,"results":"15","hashOfConfig":"12"},{"size":1688,"mtime":1610966593310,"results":"16","hashOfConfig":"12"},{"size":515,"mtime":1610718148770,"results":"17","hashOfConfig":"12"},{"size":4250,"mtime":1610971746400,"results":"18","hashOfConfig":"12"},{"size":3281,"mtime":1611219842320,"results":"19","hashOfConfig":"12"},{"size":2515,"mtime":1611134801458,"results":"20","hashOfConfig":"12"},{"size":1498,"mtime":1611217488850,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"teoads",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/david/Dev/Messenger/client/src/Components/Contact/Contact.Styled.js",[],"/home/david/Dev/Messenger/client/src/Components/App/App.js",["43","44"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// IMPORT COMPONENTS\nimport Contact from '../Contact/Contact';\nimport Message from '../Message/Message';\nimport Sign from '../Sign/Sign';\nimport Home from '../Home/Home';\n\n// SOCKETS\nlet ios;\nlet messenger;\n\nconst App = () => {\n  // STATES\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const [isOnline, setIsOnline] = useState(false);\n  const [userId, setUserId] = useState('');\n  const [error, setError] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('Erreur');\n  const [alertMessage, setAlertMessage] = useState('');\n  const [onlineUsers, setOnlineUsers] = useState();\n  const [roomId, setRoomId] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [contacts, setContacts] = useState();\n  const [contact, setContact] = useState('');\n  const [isContactOnline, setIsContactOnline] = useState(false);\n\n  // INIT SOCKET.IO\n  useEffect(() => {\n    ios = io();\n  }, []);\n\n  // CONNECT CHATROOM NAMESPACE\n  useEffect(() => {\n    if(isOnline) {\n      messenger = io('/messenger');\n\n      messenger.on('connect', () => {\n\n        messenger.on('getUsers', (res) => {\n          setOnlineUsers(res);\n        });\n\n        messenger.on('getMessages', (res) => {\n          setMessages(res);\n        });\n\n        messenger.on('getRooms', (res) => {\n          setRooms(res.rooms);\n          setContacts(res.users);\n        });\n      });\n    }\n  }, [isOnline]);\n\n  // useEffect((onlineUsers) => {\n  //   onlineUsers.map(user => {\n  //     if(user._id === contact._id) {\n  //       setIsContactOnline(true);\n  //     } else {\n\n  //     }\n  //   })\n  // }, [onlineUsers]);\n\n  const signin = (e) => {\n    e.preventDefault();\n    const ids = {username, password};\n    ios.emit('signin', ids, (res) => {\n      if(res.status === 200) {\n        setIsOnline(true);\n        setUserId(res.user_id);\n        setAlert(true);\n        setAlertMessage(res.message);\n      } else {\n        setError(true);\n        setErrorMessage(res.message);\n      }\n    });\n  };\n\n  const signup = (e) => {\n    e.preventDefault();\n    if(password === repeatPassword) {\n      const ids = {username, password};\n      ios.emit('signup', ids, (res) => {\n        if(res.status === 200) {\n          setAlert(true);\n          setAlertMessage(res.message);\n        } else {\n          setError(true);\n          setErrorMessage(res.message);\n        }\n      });\n    } else {\n      setError(true);\n      setErrorMessage('Les mots de passe ne correspondent pas');\n    }\n  };\n\n  const joinRoom = (e) => {\n    e.preventDefault();\n    const id = e.currentTarget.id;\n    const ids = {userId, id};\n    messenger.emit('joinRoom', ids, (res) => {\n      setRoomId([res.roomId]);\n      setMessages(res.messages);\n      setContact(res.contact);\n      setIsContactOnline(res.isOnline);\n    });\n  };\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    const datas = {message, userId, roomId};\n    messenger.emit('sendMessage', datas, (res) => {\n      setMessage('');\n    });\n  };\n\n\n  return (\n    <Router>\n    <div id=\"App\">\n      {!isOnline && (\n        <Sign\n          signin={signin}\n          signup={signup}\n          setUsername={setUsername}\n          username={username}\n          setPassword={setPassword}\n          password={password}\n          setRepeatPassword={setRepeatPassword}\n          repeatPassword={repeatPassword}\n          error={error}\n          setError={setError}\n          errorMessage={errorMessage}\n          alert={alert}\n          setAlert={setAlert}\n          alertMessage={alertMessage}\n        />\n      )}\n      {isOnline && (\n        <>\n        <Contact onlineUsers={onlineUsers} joinRoom={joinRoom} userId={userId} contacts={contacts} />\n        {roomId.length > 0 ? (\n          roomId.map(room => (\n            <Message\n              roomId={room}\n              messages={messages}\n              userId={userId}\n              sendMessage={sendMessage}\n              message={message}\n              setMessage={setMessage}\n              contact={contact}\n              isContactOnline={isContactOnline}\n            />\n          ))\n        ) : (\n          <Home />\n        )}\n        </>\n      )}\n\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/david/Dev/Messenger/client/src/Components/Message/Message.Styled.js",[],"/home/david/Dev/Messenger/client/src/reportWebVitals.js",[],"/home/david/Dev/Messenger/client/src/Components/Sign/Sign.Styled.js",[],"/home/david/Dev/Messenger/client/src/index.js",[],"/home/david/Dev/Messenger/client/src/Components/Sign/Sign.js",[],"/home/david/Dev/Messenger/client/src/Components/Message/Message.js",[],"/home/david/Dev/Messenger/client/src/Components/Contact/Contact.js",[],"/home/david/Dev/Messenger/client/src/Components/Home/Home.js",[],{"ruleId":"45","severity":1,"message":"46","line":4,"column":35,"nodeType":"47","messageId":"48","endLine":4,"endColumn":40},{"ruleId":"45","severity":1,"message":"49","line":29,"column":10,"nodeType":"47","messageId":"48","endLine":29,"endColumn":15},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'rooms' is assigned a value but never used."]