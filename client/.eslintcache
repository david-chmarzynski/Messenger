[{"/home/david/Dev/Messenger/client/src/Components/Contact/Contact.Styled.js":"1","/home/david/Dev/Messenger/client/src/Components/App/App.js":"2","/home/david/Dev/Messenger/client/src/Components/Message/Message.Styled.js":"3","/home/david/Dev/Messenger/client/src/reportWebVitals.js":"4","/home/david/Dev/Messenger/client/src/Components/Sign/Sign.Styled.js":"5","/home/david/Dev/Messenger/client/src/index.js":"6","/home/david/Dev/Messenger/client/src/Components/Sign/Sign.js":"7","/home/david/Dev/Messenger/client/src/Components/Message/Message.js":"8","/home/david/Dev/Messenger/client/src/Components/Contact/Contact.js":"9","/home/david/Dev/Messenger/client/src/Components/Home/Home.js":"10","/home/david/Dev/Messenger/client/src/Components/Mobile/ContactM/ContactM.styled.js":"11","/home/david/Dev/Messenger/client/src/Components/Mobile/ContactM/ContactM.js":"12","/home/david/Dev/Messenger/client/src/Components/Mobile/MessageM/MessageM.styled.js":"13","/home/david/Dev/Messenger/client/src/Components/Mobile/MessageM/MessageM.js":"14"},{"size":2178,"mtime":1611041019820,"results":"15","hashOfConfig":"16"},{"size":6860,"mtime":1611303217330,"results":"17","hashOfConfig":"16"},{"size":3731,"mtime":1611219039830,"results":"18","hashOfConfig":"16"},{"size":362,"mtime":1610718148770,"results":"19","hashOfConfig":"16"},{"size":1740,"mtime":1611304206350,"results":"20","hashOfConfig":"16"},{"size":515,"mtime":1610718148770,"results":"21","hashOfConfig":"16"},{"size":4250,"mtime":1610971746400,"results":"22","hashOfConfig":"16"},{"size":3321,"mtime":1611223608520,"results":"23","hashOfConfig":"16"},{"size":2515,"mtime":1611300225120,"results":"24","hashOfConfig":"16"},{"size":1534,"mtime":1611217629600,"results":"25","hashOfConfig":"16"},{"size":2195,"mtime":1611303521370,"results":"26","hashOfConfig":"16"},{"size":2078,"mtime":1611300240340,"results":"27","hashOfConfig":"16"},{"size":4069,"mtime":1611303165000,"results":"28","hashOfConfig":"16"},{"size":3226,"mtime":1611303263990,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"teoads",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/david/Dev/Messenger/client/src/Components/Contact/Contact.Styled.js",[],"/home/david/Dev/Messenger/client/src/Components/App/App.js",["61","62","63"],"import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// IMPORT COMPONENTS\nimport Contact from '../Contact/Contact';\nimport Message from '../Message/Message';\nimport Sign from '../Sign/Sign';\nimport Home from '../Home/Home';\nimport ContactM from '../Mobile/ContactM/ContactM';\nimport MessageM from '../Mobile/MessageM/MessageM';\n\n// SOCKETS\nlet ios;\nlet messenger;\n\nconst App = () => {\n  // STATES\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const [isOnline, setIsOnline] = useState(false);\n  const [userId, setUserId] = useState('');\n  const [error, setError] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('Erreur');\n  const [alertMessage, setAlertMessage] = useState('');\n  const [onlineUsers, setOnlineUsers] = useState();\n  const [roomId, setRoomId] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [contacts, setContacts] = useState();\n  const [contact, setContact] = useState('');\n  const [isContactOnline, setIsContactOnline] = useState(false);\n  const [isDisplayed, setIsDisplayed] = useState(false);\n  const [isResponsive, setIsResponsive] = useState(false);\n  const [width, setWidth] = useState(0);\n\n  // INIT SOCKET.IO\n  useEffect(() => {\n    ios = io();\n  }, []);\n\n  // CONNECT CHATROOM NAMESPACE\n  useEffect(() => {\n    if(isOnline) {\n      messenger = io('/messenger');\n\n      messenger.on('connect', () => {\n\n        messenger.on('getUsers', (res) => {\n          setOnlineUsers(res);\n        });\n\n        messenger.on('getMessages', (res) => {\n          setMessages(res);\n        });\n\n        messenger.on('getRooms', (res) => {\n          setRooms(res.rooms);\n          setContacts(res.users);\n        });\n      });\n    }\n  }, [isOnline]);\n\n  // useEffect((onlineUsers) => {\n  //   onlineUsers.map(user => {\n  //     if(user._id === contact._id) {\n  //       setIsContactOnline(true);\n  //     } else {\n\n  //     }\n  //   })\n  // }, [onlineUsers]);\n\n  // GET WINDOW WIDTH & SET RESPONSIVE\n  useLayoutEffect(() => {\n    function updateSize() {\n      setWidth(window.innerWidth);\n      if (window.innerWidth <= 1024) {\n        setIsResponsive(true);\n      }\n      else {\n        setIsResponsive(false);\n      }\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  const signin = (e) => {\n    e.preventDefault();\n    const ids = {username, password};\n    ios.emit('signin', ids, (res) => {\n      if(res.status === 200) {\n        setIsOnline(true);\n        setUserId(res.user_id);\n        setAlert(true);\n        setAlertMessage(res.message);\n      } else {\n        setError(true);\n        setErrorMessage(res.message);\n      }\n    });\n  };\n\n  const signup = (e) => {\n    e.preventDefault();\n    if(password === repeatPassword) {\n      const ids = {username, password};\n      ios.emit('signup', ids, (res) => {\n        if(res.status === 200) {\n          setAlert(true);\n          setAlertMessage(res.message);\n        } else {\n          setError(true);\n          setErrorMessage(res.message);\n        }\n      });\n    } else {\n      setError(true);\n      setErrorMessage('Les mots de passe ne correspondent pas');\n    }\n  };\n\n  const joinRoom = (e) => {\n    e.preventDefault();\n    const id = e.currentTarget.id;\n    const ids = {userId, id};\n    messenger.emit('joinRoom', ids, (res) => {\n      setRoomId([res.roomId]);\n      setMessages(res.messages);\n      setContact(res.contact);\n      setIsContactOnline(res.isOnline);\n      if(isResponsive) {\n        setIsDisplayed(true);\n      }\n    });\n  };\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    const datas = {message, userId, roomId};\n    messenger.emit('sendMessage', datas, (res) => {\n      setMessage('');\n    });\n  };\n\n\n  return (\n    <Router>\n    <div id=\"App\">\n      {!isOnline && (\n        <Sign\n          signin={signin}\n          signup={signup}\n          setUsername={setUsername}\n          username={username}\n          setPassword={setPassword}\n          password={password}\n          setRepeatPassword={setRepeatPassword}\n          repeatPassword={repeatPassword}\n          error={error}\n          setError={setError}\n          errorMessage={errorMessage}\n          alert={alert}\n          setAlert={setAlert}\n          alertMessage={alertMessage}\n          isDisplayed={isDisplayed}\n          isResponsive={isResponsive}\n        />\n      )}\n\n      {/* {isOnline && !isResponsive && (\n        <>\n        <Contact onlineUsers={onlineUsers} joinRoom={joinRoom} userId={userId} contacts={contacts} isDisplayed={isDisplayed} isResponsive={isResponsive} />\n        {roomId.length > 0 ? (\n          roomId.map(room => (\n            <Message\n              roomId={room}\n              messages={messages}\n              userId={userId}\n              sendMessage={sendMessage}\n              message={message}\n              setMessage={setMessage}\n              contact={contact}\n              isContactOnline={isContactOnline}\n              isDisplayed={isDisplayed}\n              isResponsive={isResponsive}\n            />\n          ))\n        ) : (\n          <Home />\n        )}\n        </>\n      )} */}\n\n      {isOnline && !isResponsive && (\n        <Contact onlineUsers={onlineUsers} joinRoom={joinRoom} userId={userId} contacts={contacts} />\n      )}\n      {isOnline && !isResponsive && roomId.length > 0 && (\n        roomId.map(room => (\n          <Message\n            roomId={room}\n            messages={messages}\n            userId={userId}\n            sendMessage={sendMessage}\n            message={message}\n            setMessage={setMessage}\n            contact={contact}\n            isContactOnline={isContactOnline}\n          />\n      )))}\n      {isOnline && !isResponsive && roomId.length === 0 && (\n        <Home />\n      )}\n      \n      {/* RESPONSIVE */}\n      {isOnline && isResponsive && !isDisplayed && (\n        <ContactM onlineUsers={onlineUsers} joinRoom={joinRoom} userId={userId} contacts={contacts}/>\n      )}\n      {isOnline && isResponsive && isDisplayed && roomId.length > 0 && (\n        roomId.map(room => (\n          <MessageM\n            roomId={room}\n            messages={messages}\n            userId={userId}\n            sendMessage={sendMessage}\n            message={message}\n            setMessage={setMessage}\n            contact={contact}\n            isContactOnline={isContactOnline}\n            setIsDisplayed={setIsDisplayed}\n          />\n      )))}\n\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/david/Dev/Messenger/client/src/Components/Message/Message.Styled.js",[],"/home/david/Dev/Messenger/client/src/reportWebVitals.js",[],"/home/david/Dev/Messenger/client/src/Components/Sign/Sign.Styled.js",[],"/home/david/Dev/Messenger/client/src/index.js",[],"/home/david/Dev/Messenger/client/src/Components/Sign/Sign.js",[],"/home/david/Dev/Messenger/client/src/Components/Message/Message.js",["64"],"import React, { useRef, useEffect, useState } from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport {\n  StyledMessage,\n  StyledMessageHeader,\n  StyledMessageFooter,\n  StyledPersonalMessage,\n  StyledMessageSection,\n  StyledContactMessage,\n  StyledMessageHeaderLeft,\n  StyledMessageInformation,\n  StyledMessageHeaderRight,\n  StyledMessageFooterInput\n} from './Message.Styled';\n\n// IMPORT MUI COMPONENTS\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport ReactEmoji from 'react-emoji';\n\nconst Message = ({ roomId, messages, userId, sendMessage, message, setMessage, contact, isContactOnline, isDisplayed, isResponsive }) => {\n  const ref = useRef(null);\n  \n  const scrollToBottom = () => {\n    ref.current.scrollTo({ \n      behavior: \"smooth\",\n      top: document.getElementById('scroller').scrollHeight\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  return (\n      <StyledMessage>\n        <StyledMessageHeader>\n        <StyledMessageHeaderLeft>\n          <IconButton>\n            <Avatar />\n          </IconButton>\n          <StyledMessageInformation>\n            <h2>{contact}</h2>\n            <p>{isContactOnline ? \"Actuellement en ligne\" : \"Actuellement hors ligne\"}</p>\n          </StyledMessageInformation>\n        </StyledMessageHeaderLeft>\n        <StyledMessageHeaderRight>\n          <IconButton>\n            <PhoneIcon />\n          </IconButton>\n          <IconButton>\n            <VideocamIcon />\n          </IconButton>\n          <IconButton>\n            <SearchIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </StyledMessageHeaderRight>\n        </StyledMessageHeader>\n        <StyledMessageSection ref={ref} id=\"scroller\">\n          {messages.map(message => {\n            return message.room === roomId && message.author === userId ? <StyledPersonalMessage><p>{ReactEmoji.emojify(message.data)}</p></StyledPersonalMessage> :\n            message.room === roomId && message.author !== userId ? <StyledContactMessage><p>{ReactEmoji.emojify(message.data)}</p></StyledContactMessage> : null\n          })}\n        </StyledMessageSection>\n        <StyledMessageFooter>\n          <IconButton>\n            <AddIcon />\n          </IconButton>\n          <StyledMessageFooterInput>\n            <textarea\n            name=\"\"\n            id=\"\"\n            cols=\"20\"\n            rows=\"1\"\n            wrap=\"hard\"\n            placeholder=\"Ecrivez un message...\"\n            value={message}\n            onKeyPress={e => e.key === \"Enter\" ? sendMessage(e) : null}\n            onChange={e => setMessage(e.target.value)}\n            >\n            </textarea>\n            <IconButton>\n              <EmojiEmotionsIcon />\n            </IconButton>\n          </StyledMessageFooterInput>\n          <IconButton onClick={e => sendMessage(e)}>\n            <SendIcon />\n          </IconButton>\n        </StyledMessageFooter>\n      </StyledMessage>\n  );\n};\n\nexport default Message;","/home/david/Dev/Messenger/client/src/Components/Contact/Contact.js",[],"/home/david/Dev/Messenger/client/src/Components/Home/Home.js",["65"],"import React from 'react';\n\n// IMPORT STYLED COMPONENTS (MESSAGE)\nimport { \n  StyledMessage,\n  StyledMessageHeader,\n  StyledMessageSection,\n  StyledContactMessage,\n  StyledMessageHeaderLeft,\n  StyledMessageInformation,\n  StyledMessageHeaderRight,\n  StyledMessengerMessage\n} from '../Message/Message.Styled';\n\n// IMPORT MUI COMPONENTS\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Avatar, IconButton } from '@material-ui/core';\n\nconst Home = () => {\n  return (\n    <StyledMessage>\n        <StyledMessageHeader>\n        <StyledMessageHeaderLeft>\n          <IconButton>\n            <Avatar />\n          </IconButton>\n          <StyledMessageInformation>\n          </StyledMessageInformation>\n        </StyledMessageHeaderLeft>\n        <StyledMessageHeaderRight>\n          <IconButton>\n            <PhoneIcon />\n          </IconButton>\n          <IconButton>\n            <VideocamIcon />\n          </IconButton>\n          <IconButton>\n            <SearchIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </StyledMessageHeaderRight>\n        </StyledMessageHeader>\n        <StyledMessageSection>\n          <StyledMessengerMessage><p>Commencez une discussion avec un contact connecté</p></StyledMessengerMessage>\n        </StyledMessageSection>\n      </StyledMessage>\n  );\n};\n\nexport default Home;","/home/david/Dev/Messenger/client/src/Components/Mobile/ContactM/ContactM.styled.js",[],"/home/david/Dev/Messenger/client/src/Components/Mobile/ContactM/ContactM.js",[],"/home/david/Dev/Messenger/client/src/Components/Mobile/MessageM/MessageM.styled.js",[],"/home/david/Dev/Messenger/client/src/Components/Mobile/MessageM/MessageM.js",[],{"ruleId":"66","severity":1,"message":"67","line":4,"column":35,"nodeType":"68","messageId":"69","endLine":4,"endColumn":40},{"ruleId":"66","severity":1,"message":"70","line":31,"column":10,"nodeType":"68","messageId":"69","endLine":31,"endColumn":15},{"ruleId":"66","severity":1,"message":"71","line":39,"column":10,"nodeType":"68","messageId":"69","endLine":39,"endColumn":15},{"ruleId":"66","severity":1,"message":"72","line":1,"column":36,"nodeType":"68","messageId":"69","endLine":1,"endColumn":44},{"ruleId":"66","severity":1,"message":"73","line":8,"column":3,"nodeType":"68","messageId":"69","endLine":8,"endColumn":23},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'rooms' is assigned a value but never used.","'width' is assigned a value but never used.","'useState' is defined but never used.","'StyledContactMessage' is defined but never used."]